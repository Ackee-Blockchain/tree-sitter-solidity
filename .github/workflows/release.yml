name: Deploy on release
on:
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-12, macos-11]
    steps:
      - name: Checkout latest release
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install abch-tree-sitter build auditwheel

      - name: Install patchelf
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install patchelf

      - name: Build wheel
        run: |
          python -m build -w -C="--build-option=--plat-name" -C="--build-option=$(python -c  'import sysconfig; print(sysconfig.get_platform())')"

      - name: Patch wheel
        if: runner.os == 'Linux'
        run: |
          auditwheel repair dist/*.whl

      - name: Upload wheel on Linux
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: wheelhouse/*.whl

      - name: Upload wheel on Windows and macOS
        if: runner.os != 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: dist/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest release
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Build SDist
        run: pipx run build --sdist

      - name: Upload SDist
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: dist/*.tar.gz

  upload:
    name: Upload to PyPI
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
